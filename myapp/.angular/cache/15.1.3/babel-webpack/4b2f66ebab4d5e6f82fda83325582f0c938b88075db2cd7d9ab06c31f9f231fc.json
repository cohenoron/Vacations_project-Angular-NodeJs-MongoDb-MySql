{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\nlet StateService = class StateService {\n  //   private jwt = this.Cookies.get('token');\n  //   private api = 'https://react-node-mysql-jwt.herokuapp.com/profile';\n  constructor(http, Cookies) {\n    this.http = http;\n    this.Cookies = Cookies;\n    this.modeUser = new BehaviorSubject(false);\n    this.currentModeUser = this.modeUser.asObservable();\n    this.modeAdmin = new BehaviorSubject(false);\n    this.currentModeAdmin = this.modeAdmin.asObservable();\n    this.showLoginModal = new BehaviorSubject(true);\n    this.currentShowLoginModal = this.showLoginModal.asObservable();\n    this.isLogin = new BehaviorSubject(false);\n    this.currentIsLogin = this.isLogin.asObservable();\n    this.showNewVacationModal = new BehaviorSubject(false);\n    this.currentShowNewVacationModal = this.showNewVacationModal.asObservable();\n    this.showVacationUpdate = new BehaviorSubject(false);\n    this.currentShowVacationUpdate = this.showVacationUpdate.asObservable();\n    this.showVacationDelete = new BehaviorSubject(false);\n    this.currentShowVacationDelete = this.showVacationDelete.asObservable();\n    this.showRegisterModal = new BehaviorSubject(false);\n    this.currentShowRegisterModal = this.showRegisterModal.asObservable();\n    this.nameOfUser = new BehaviorSubject('Guest');\n    this.currentNameOfUser = this.nameOfUser.asObservable();\n  }\n  changeModeUser(value) {\n    this.modeUser.next(value);\n  }\n  changeModeAdmin(value) {\n    this.modeAdmin.next(value);\n  }\n  changeShowLoginModal(value) {\n    this.showLoginModal.next(value);\n  }\n  changeIsLogin(value) {\n    this.isLogin.next(value);\n  }\n  changeShowNewVacationModal(value) {\n    this.showNewVacationModal.next(value);\n  }\n  changeShowVacationUpdate(value) {\n    this.showVacationUpdate.next(value);\n  }\n  changeShowVacationDelete(value) {\n    this.showVacationDelete.next(value);\n  }\n  changeShowRegisterModal(value) {\n    this.showRegisterModal.next(value);\n  }\n  changeNameOfUser(value) {\n    this.nameOfUser.next(value);\n  }\n  checkLogin() {\n    const jwt = Cookies.get('token');\n    if (jwt) {\n      this.changeIsLogin(true);\n      this.changeShowLoginModal(false);\n      axios.get('https://react-node-mysql-jwt.herokuapp.com/profile', {\n        withCredentials: true,\n        headers: {\n          authorization: `Bearer ${jwt}`\n        }\n      }).then(function (response) {\n        const {\n          userName,\n          admin\n        } = response.data;\n        if (admin) {\n          setModeAdmin(true);\n          setModeUser(false);\n          setNameOfUser(userName);\n        }\n        if (!admin) {\n          setModeUser(true);\n          setModeAdmin(false);\n          setNameOfUser(userName);\n        }\n      }).catch(function (error) {\n        console.log(error.message);\n      });\n      if (this.jwt) {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            'authorization': `Bearer ${this.jwt}`\n          })\n        };\n        this.http.get(this.api, httpOptions).subscribe(response => {\n          const userName = response['userName'];\n          const isAdmin = response['admin'];\n          if (isAdmin) {\n            this.changeModeAdmin(true);\n            this.changeModeUser(false);\n            this.changeNameOfUser(userName);\n          } else {\n            this.changeModeUser(true);\n            this.changeModeAdmin(false);\n            this.changeNameOfUser(userName);\n          }\n        }, error => {\n          console.error(error.message);\n        });\n      }\n    }\n  }\n};\nStateService = __decorate([Injectable({\n  providedIn: 'root'\n})], StateService);\nexport { StateService };","map":{"version":3,"mappings":"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","names":["Injectable","BehaviorSubject","HttpHeaders","Cookies","axios","StateService","constructor","http","modeUser","asObservable","modeAdmin","showLoginModal","isLogin","showNewVacationModal","showVacationUpdate","showVacationDelete","showRegisterModal","nameOfUser","changeModeUser","value","next","changeModeAdmin","changeShowLoginModal","changeIsLogin","changeShowNewVacationModal","changeShowVacationUpdate","changeShowVacationDelete","changeShowRegisterModal","changeNameOfUser","checkLogin","jwt","get","withCredentials","headers","authorization","then","response","userName","admin","data","setModeAdmin","setModeUser","setNameOfUser","catch","error","console","log","message","httpOptions","api","subscribe","isAdmin","providedIn"],"sourceRoot":"","sources":["D:\\workSpace\\angular\\myapp\\src\\app\\service\\shared.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StateService {\r\n  private modeUser = new BehaviorSubject<boolean>(false);\r\n  currentModeUser = this.modeUser.asObservable();\r\n\r\n  private modeAdmin = new BehaviorSubject<boolean>(false);\r\n  currentModeAdmin = this.modeAdmin.asObservable();\r\n\r\n  private showLoginModal = new BehaviorSubject<boolean>(true);\r\n  currentShowLoginModal = this.showLoginModal.asObservable();\r\n\r\n  private isLogin = new BehaviorSubject<boolean>(false);\r\n  currentIsLogin = this.isLogin.asObservable();\r\n\r\n  private showNewVacationModal = new BehaviorSubject<boolean>(false);\r\n  currentShowNewVacationModal = this.showNewVacationModal.asObservable();\r\n\r\n  private showVacationUpdate = new BehaviorSubject<boolean>(false);\r\n  currentShowVacationUpdate = this.showVacationUpdate.asObservable();\r\n\r\n  private showVacationDelete = new BehaviorSubject<any>(false);\r\n  currentShowVacationDelete = this.showVacationDelete.asObservable();\r\n\r\n  private showRegisterModal = new BehaviorSubject<any>(false);\r\n  currentShowRegisterModal = this.showRegisterModal.asObservable();\r\n\r\n  private nameOfUser = new BehaviorSubject<string>('Guest');\r\n  currentNameOfUser = this.nameOfUser.asObservable();\r\n\r\n//   private jwt = this.Cookies.get('token');\r\n//   private api = 'https://react-node-mysql-jwt.herokuapp.com/profile';\r\n\r\n  constructor(private http: HttpClient, private Cookies: any) {}\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  changeModeUser(value: boolean) {\r\n    this.modeUser.next(value);\r\n  }\r\n\r\n  changeModeAdmin(value: boolean) {\r\n    this.modeAdmin.next(value);\r\n  }\r\n\r\n  changeShowLoginModal(value: boolean) {\r\n    this.showLoginModal.next(value);\r\n  }\r\n\r\n  changeIsLogin(value: boolean) {\r\n    this.isLogin.next(value);\r\n  }\r\n\r\n  changeShowNewVacationModal(value: boolean) {\r\n    this.showNewVacationModal.next(value);\r\n  }\r\n\r\n  changeShowVacationUpdate(value: boolean) {\r\n    this.showVacationUpdate.next(value);\r\n  }\r\n\r\n  changeShowVacationDelete(value: boolean) {\r\n    this.showVacationDelete.next(value);\r\n  }\r\n\r\n  changeShowRegisterModal(value: any) {\r\n    this.showRegisterModal.next(value);\r\n  }\r\n\r\n  changeNameOfUser(value: string) {\r\n    this.nameOfUser.next(value);\r\n  }\r\n\r\n  checkLogin() {\r\n    const jwt = Cookies.get('token')\r\n    if (jwt) {\r\n        this.changeIsLogin(true);\r\n      this.changeShowLoginModal(false);\r\n\r\n      axios\r\n      .get('https://react-node-mysql-jwt.herokuapp.com/profile', {\r\n        withCredentials: true,\r\n        headers: { authorization: `Bearer ${jwt}` },\r\n      })\r\n      .then(function (response) {\r\n        const { userName, admin } = response.data\r\n        if (admin) {\r\n          setModeAdmin(true)\r\n          setModeUser(false)\r\n          setNameOfUser(userName)\r\n        }\r\n        if (!admin) {\r\n          setModeUser(true)\r\n          setModeAdmin(false)\r\n          setNameOfUser(userName)\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message)\r\n      })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    if (this.jwt) {\r\n     \r\n\r\n      const httpOptions = {\r\n        headers: new HttpHeaders({\r\n          'authorization': `Bearer ${this.jwt}`\r\n        })\r\n      };\r\n\r\n      this.http.get(this.api, httpOptions)\r\n        .subscribe(\r\n          (response) => {\r\n            const userName = response['userName'];\r\n            const isAdmin = response['admin'];\r\n            if (isAdmin) {\r\n              this.changeModeAdmin(true);\r\n              this.changeModeUser(false);\r\n              this.changeNameOfUser(userName);\r\n            } else {\r\n              this.changeModeUser(true);\r\n              this.changeModeAdmin(false);\r\n              this.changeNameOfUser(userName);\r\n            }\r\n          },\r\n          (error) => {\r\n            console.error(error.message);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}