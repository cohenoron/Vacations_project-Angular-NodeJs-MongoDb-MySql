{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\nlet VacationsComponent = class VacationsComponent {\n  constructor(http, stateService) {\n    this.http = http;\n    this.stateService = stateService;\n  }\n  ngOnInit() {\n    this.http.get('http://localhost:8080/vacations').subscribe(data => {\n      this.vacations = data;\n    });\n    this.stateService.currentModeUser.subscribe(value => {\n      this.modeUser = value;\n    });\n    this.stateService.currentModeAdmin.subscribe(value => {\n      this.modeAdmin = value;\n    });\n    this.stateService.currentShowRegisterModal.subscribe(value => {\n      this.showRegisterModal = value;\n    });\n    this.stateService.currentShowLoginModal.subscribe(value => {\n      this.showLoginModal = value;\n    });\n    this.stateService.currentShowNewVacationModal.subscribe(value => {\n      this.showNewVacationModal = value;\n    });\n    this.stateService.currentShowVacationUpdate.subscribe(value => {\n      this.showVacationUpdate = value;\n    });\n    this.stateService.currentShowVacationDelete.subscribe(value => {\n      this.showVacationDelete = value;\n    });\n    this.stateService.currentNameOfUser.subscribe(value => {\n      this.nameOfUser = value;\n    });\n    this.stateService.currentModeUser.subscribe(value => {\n      this.modeUser = value;\n    });\n    if (this.nameOfUser !== 'Guest') {\n      this.stateService.changeShowLoginModal(false);\n    }\n    this.stateService.checkLogin();\n    console.log(this.modeUser);\n    console.log(this.modeAdmin);\n    console.log(this.nameOfUser);\n    if (this.modeUser) {\n      const tkn = Cookies.get('token');\n      axios.get('http://localhost:8080/fav', {\n        withCredentials: true,\n        headers: {\n          authorization: `Bearer ${tkn}`\n        }\n      }).then(function (response) {\n        console.log(response.data);\n        // const result = response.data.map(({ vacation_id }) => vacation_id)\n        // setChecked(result)\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n  loggin() {\n    this.stateService.changeShowLoginModal(true);\n    this.stateService.changeModeUser(false);\n    this.stateService.changeModeAdmin(false);\n    Cookies.remove('token');\n  }\n  logout() {\n    this.stateService.changeShowLoginModal(true);\n    this.stateService.changeModeUser(false);\n    this.stateService.changeModeAdmin(false);\n    Cookies.remove('token');\n  }\n  addNewVacation() {\n    this.stateService.changeShowLoginModal(false);\n    this.stateService.changeModeUser(false);\n    this.stateService.changeShowNewVacationModal(true);\n  }\n  handleUpdateEvent(vacation) {\n    this.selectedVacation = vacation;\n    this.stateService.changeShowVacationUpdate(true);\n  }\n  handleDeleteEvent(vacation) {\n    this.selectedVacation = vacation;\n    this.stateService.changeShowVacationDelete(true);\n  }\n  handleCheck(vacation) {\n    this.selectedVacation = vacation;\n    const jwt = Cookies.get('token');\n    axios.patch(`http://localhost:8080/fav/${vacation.id}`, {\n      withCredentials: true,\n      headers: {\n        authorization: `Bearer ${jwt}`\n      }\n    }).then(response => {\n      this.checked = response.data;\n      // console.log(this.checked);\n      // const result = response.data.map(({ vacation_id }) => vacation_id)\n      // setChecked(result)\n    }).catch(function (error) {\n      alert(error);\n    });\n  }\n};\nVacationsComponent = __decorate([Component({\n  selector: 'app-vacations',\n  templateUrl: './vacations.component.html',\n  styleUrls: ['./vacations.component.css']\n})], VacationsComponent);\nexport { VacationsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAOlB,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAa7BC,YAAoBC,IAAgB,EAAUC,YAA0B;IAApD,SAAI,GAAJD,IAAI;IAAsB,iBAAY,GAAZC,YAAY;EAAiB;EAE3EC,QAAQ;IACN,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,iCAAiC,CAAC,CAACC,SAAS,CAAEC,IAAI,IAAI;MAClE,IAAI,CAACC,SAAS,GAAGD,IAAI;IACvB,CAAC,CAAC;IAEF,IAAI,CAACJ,YAAY,CAACM,eAAe,CAACH,SAAS,CAAEI,KAAK,IAAI;MACpD,IAAI,CAACC,QAAQ,GAAGD,KAAK;IACvB,CAAC,CAAC;IACF,IAAI,CAACP,YAAY,CAACS,gBAAgB,CAACN,SAAS,CAAEI,KAAK,IAAI;MACrD,IAAI,CAACG,SAAS,GAAGH,KAAK;IACxB,CAAC,CAAC;IAEF,IAAI,CAACP,YAAY,CAACW,wBAAwB,CAACR,SAAS,CAAEI,KAAK,IAAI;MAC7D,IAAI,CAACK,iBAAiB,GAAGL,KAAK;IAChC,CAAC,CAAC;IACF,IAAI,CAACP,YAAY,CAACa,qBAAqB,CAACV,SAAS,CAAEI,KAAK,IAAI;MAC1D,IAAI,CAACO,cAAc,GAAGP,KAAK;IAC7B,CAAC,CAAC;IACF,IAAI,CAACP,YAAY,CAACe,2BAA2B,CAACZ,SAAS,CAAEI,KAAK,IAAI;MAChE,IAAI,CAACS,oBAAoB,GAAGT,KAAK;IACnC,CAAC,CAAC;IACF,IAAI,CAACP,YAAY,CAACiB,yBAAyB,CAACd,SAAS,CAAEI,KAAK,IAAI;MAC9D,IAAI,CAACW,kBAAkB,GAAGX,KAAK;IACjC,CAAC,CAAC;IACF,IAAI,CAACP,YAAY,CAACmB,yBAAyB,CAAChB,SAAS,CAAEI,KAAK,IAAI;MAC9D,IAAI,CAACa,kBAAkB,GAAGb,KAAK;IACjC,CAAC,CAAC;IACF,IAAI,CAACP,YAAY,CAACqB,iBAAiB,CAAClB,SAAS,CAAEI,KAAK,IAAI;MACtD,IAAI,CAACe,UAAU,GAAGf,KAAK;IACzB,CAAC,CAAC;IACF,IAAI,CAACP,YAAY,CAACM,eAAe,CAACH,SAAS,CAAEI,KAAK,IAAI;MACpD,IAAI,CAACC,QAAQ,GAAGD,KAAK;IACvB,CAAC,CAAC;IACF,IAAI,IAAI,CAACe,UAAU,KAAK,OAAO,EAAE;MAC/B,IAAI,CAACtB,YAAY,CAACuB,oBAAoB,CAAC,KAAK,CAAC;;IAG/C,IAAI,CAACvB,YAAY,CAACwB,UAAU,EAAE;IAG9BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAClB,QAAQ,CAAC;IAC1BiB,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,SAAS,CAAC;IAC3Be,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,UAAU,CAAC;IAG5B,IAAI,IAAI,CAACd,QAAQ,EAAE;MACjB,MAAMmB,GAAG,GAAGhC,OAAO,CAACO,GAAG,CAAC,OAAO,CAAC;MAChCN,KAAK,CACFM,GAAG,CAAC,2BAA2B,EAAE;QAChC0B,eAAe,EAAE,IAAI;QACrBC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUH,GAAG;QAAE;OAC1C,CAAC,CACDI,IAAI,CAAC,UAAUC,QAAQ;QACtBP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC5B,IAAI,CAAC;QAC1B;QACA;MACF,CAAC,CAAC,CACD6B,KAAK,CAAC,UAAUC,KAAK;QACpBT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;MACpB,CAAC,CAAC;;EAER;EAEAC,MAAM;IACJ,IAAI,CAACnC,YAAY,CAACuB,oBAAoB,CAAC,IAAI,CAAC;IAC5C,IAAI,CAACvB,YAAY,CAACoC,cAAc,CAAC,KAAK,CAAC;IACvC,IAAI,CAACpC,YAAY,CAACqC,eAAe,CAAC,KAAK,CAAC;IACxC1C,OAAO,CAAC2C,MAAM,CAAC,OAAO,CAAC;EACzB;EAEAC,MAAM;IACJ,IAAI,CAACvC,YAAY,CAACuB,oBAAoB,CAAC,IAAI,CAAC;IAC5C,IAAI,CAACvB,YAAY,CAACoC,cAAc,CAAC,KAAK,CAAC;IACvC,IAAI,CAACpC,YAAY,CAACqC,eAAe,CAAC,KAAK,CAAC;IACxC1C,OAAO,CAAC2C,MAAM,CAAC,OAAO,CAAC;EACzB;EAEAE,cAAc;IACZ,IAAI,CAACxC,YAAY,CAACuB,oBAAoB,CAAC,KAAK,CAAC;IAC7C,IAAI,CAACvB,YAAY,CAACoC,cAAc,CAAC,KAAK,CAAC;IACvC,IAAI,CAACpC,YAAY,CAACyC,0BAA0B,CAAC,IAAI,CAAC;EACpD;EAEAC,iBAAiB,CAACC,QAAa;IAC7B,IAAI,CAACC,gBAAgB,GAAGD,QAAQ;IAChC,IAAI,CAAC3C,YAAY,CAAC6C,wBAAwB,CAAC,IAAI,CAAC;EAClD;EACAC,iBAAiB,CAACH,QAAa;IAC7B,IAAI,CAACC,gBAAgB,GAAGD,QAAQ;IAChC,IAAI,CAAC3C,YAAY,CAAC+C,wBAAwB,CAAC,IAAI,CAAC;EAClD;EACAC,WAAW,CAACL,QAAa;IACvB,IAAI,CAACC,gBAAgB,GAAGD,QAAQ;IAChC,MAAMM,GAAG,GAAGtD,OAAO,CAACO,GAAG,CAAC,OAAO,CAAC;IAEhCN,KAAK,CACFsD,KAAK,CAAC,6BAA6BP,QAAQ,CAACQ,EAAE,EAAE,EAAE;MACjDvB,eAAe,EAAE,IAAI;MACrBC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUmB,GAAG;MAAE;KAC1C,CAAC,CACDlB,IAAI,CAAEC,QAAQ,IAAI;MACjB,IAAI,CAACoB,OAAO,GAAGpB,QAAQ,CAAC5B,IAAI;MAC5B;MACA;MACA;IACF,CAAC,CAAC,CACD6B,KAAK,CAAC,UAAUC,KAAK;MACpBmB,KAAK,CAACnB,KAAK,CAAC;IACd,CAAC,CAAC;EACN;CACD;AA7HYrC,kBAAkB,eAL9BH,SAAS,CAAC;EACT4D,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACW3D,kBAAkB,CA6H9B;SA7HYA,kBAAkB","names":["Component","Cookies","axios","VacationsComponent","constructor","http","stateService","ngOnInit","get","subscribe","data","vacations","currentModeUser","value","modeUser","currentModeAdmin","modeAdmin","currentShowRegisterModal","showRegisterModal","currentShowLoginModal","showLoginModal","currentShowNewVacationModal","showNewVacationModal","currentShowVacationUpdate","showVacationUpdate","currentShowVacationDelete","showVacationDelete","currentNameOfUser","nameOfUser","changeShowLoginModal","checkLogin","console","log","tkn","withCredentials","headers","authorization","then","response","catch","error","loggin","changeModeUser","changeModeAdmin","remove","logout","addNewVacation","changeShowNewVacationModal","handleUpdateEvent","vacation","selectedVacation","changeShowVacationUpdate","handleDeleteEvent","changeShowVacationDelete","handleCheck","jwt","patch","id","checked","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\workSpace\\angular\\myapp\\src\\app\\vacations\\vacations.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { StateService } from '../service/shared.service';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\n\n@Component({\n  selector: 'app-vacations',\n  templateUrl: './vacations.component.html',\n  styleUrls: ['./vacations.component.css'],\n})\nexport class VacationsComponent implements OnInit {\n  vacations: any;\n  showRegisterModal: any | undefined;\n  showLoginModal: any | undefined;\n  showNewVacationModal: any | undefined;\n  nameOfUser: any | undefined;\n  modeUser: any | undefined;\n  modeAdmin: any | undefined;\n  showVacationUpdate: boolean | undefined;\n  selectedVacation: any;\n  showVacationDelete: any;\n  checked: number[] | undefined;\n\n  constructor(private http: HttpClient, private stateService: StateService) {}\n\n  ngOnInit() {\n    this.http.get('http://localhost:8080/vacations').subscribe((data) => {\n      this.vacations = data;\n    });\n\n    this.stateService.currentModeUser.subscribe((value) => {\n      this.modeUser = value;\n    });\n    this.stateService.currentModeAdmin.subscribe((value) => {\n      this.modeAdmin = value;\n    });\n\n    this.stateService.currentShowRegisterModal.subscribe((value) => {\n      this.showRegisterModal = value;\n    });\n    this.stateService.currentShowLoginModal.subscribe((value) => {\n      this.showLoginModal = value;\n    });\n    this.stateService.currentShowNewVacationModal.subscribe((value) => {\n      this.showNewVacationModal = value;\n    });\n    this.stateService.currentShowVacationUpdate.subscribe((value) => {\n      this.showVacationUpdate = value;\n    });\n    this.stateService.currentShowVacationDelete.subscribe((value) => {\n      this.showVacationDelete = value;\n    });\n    this.stateService.currentNameOfUser.subscribe((value) => {\n      this.nameOfUser = value;\n    });\n    this.stateService.currentModeUser.subscribe((value) => {\n      this.modeUser = value;\n    });\n    if (this.nameOfUser !== 'Guest') {\n      this.stateService.changeShowLoginModal(false);\n    }\n\n    this.stateService.checkLogin();\n\n\n    console.log(this.modeUser);\n    console.log(this.modeAdmin);\n    console.log(this.nameOfUser);\n\n\n    if (this.modeUser) {\n      const tkn = Cookies.get('token');\n      axios\n        .get('http://localhost:8080/fav', {\n          withCredentials: true,\n          headers: { authorization: `Bearer ${tkn}` },\n        })\n        .then(function (response) {\n          console.log(response.data);\n          // const result = response.data.map(({ vacation_id }) => vacation_id)\n          // setChecked(result)\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }\n\n  loggin() {\n    this.stateService.changeShowLoginModal(true);\n    this.stateService.changeModeUser(false);\n    this.stateService.changeModeAdmin(false);\n    Cookies.remove('token');\n  }\n\n  logout() {\n    this.stateService.changeShowLoginModal(true);\n    this.stateService.changeModeUser(false);\n    this.stateService.changeModeAdmin(false);\n    Cookies.remove('token');\n  }\n\n  addNewVacation() {\n    this.stateService.changeShowLoginModal(false);\n    this.stateService.changeModeUser(false);\n    this.stateService.changeShowNewVacationModal(true);\n  }\n\n  handleUpdateEvent(vacation: any) {\n    this.selectedVacation = vacation;\n    this.stateService.changeShowVacationUpdate(true);\n  }\n  handleDeleteEvent(vacation: any) {\n    this.selectedVacation = vacation;\n    this.stateService.changeShowVacationDelete(true);\n  }\n  handleCheck(vacation: any) {\n    this.selectedVacation = vacation;\n    const jwt = Cookies.get('token');\n\n    axios\n      .patch(`http://localhost:8080/fav/${vacation.id}`, {\n        withCredentials: true,\n        headers: { authorization: `Bearer ${jwt}` },\n      })\n      .then((response) => {\n        this.checked = response.data;\n        // console.log(this.checked);\n        // const result = response.data.map(({ vacation_id }) => vacation_id)\n        // setChecked(result)\n      })\n      .catch(function (error) {\n        alert(error);\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}