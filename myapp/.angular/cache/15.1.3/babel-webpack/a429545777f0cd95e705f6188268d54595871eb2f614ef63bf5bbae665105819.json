{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class StateService {\n  constructor() {\n    this.modeUser = new BehaviorSubject(false);\n    this.currentModeUser = this.modeUser.asObservable();\n    this.modeAdmin = new BehaviorSubject(false);\n    this.currentModeAdmin = this.modeAdmin.asObservable();\n    this.showLoginModal = new BehaviorSubject(true);\n    this.currentShowLoginModal = this.showLoginModal.asObservable();\n    this.isLogin = new BehaviorSubject(false);\n    this.currentIsLogin = this.isLogin.asObservable();\n    this.showNewVacationModal = new BehaviorSubject(false);\n    this.currentShowNewVacationModal = this.showNewVacationModal.asObservable();\n    this.showVacationUpdate = new BehaviorSubject(false);\n    this.currentShowVacationUpdate = this.showVacationUpdate.asObservable();\n    this.showVacationDelete = new BehaviorSubject(false);\n    this.currentShowVacationDelete = this.showVacationDelete.asObservable();\n    this.showRegisterModal = new BehaviorSubject(false);\n    this.currentShowRegisterModal = this.showRegisterModal.asObservable();\n    this.nameOfUser = new BehaviorSubject('Guest');\n    this.currentNameOfUser = this.nameOfUser.asObservable();\n    this.jwt = this.Cookies.get('token');\n    this.api = 'https://react-node-mysql-jwt.herokuapp.com/profile';\n  }\n  changeModeUser(value) {\n    this.modeUser.next(value);\n  }\n  changeModeAdmin(value) {\n    this.modeAdmin.next(value);\n  }\n  changeShowLoginModal(value) {\n    this.showLoginModal.next(value);\n  }\n  changeIsLogin(value) {\n    this.isLogin.next(value);\n  }\n  changeShowNewVacationModal(value) {\n    this.showNewVacationModal.next(value);\n  }\n  changeShowVacationUpdate(value) {\n    this.showVacationUpdate.next(value);\n  }\n  changeShowVacationDelete(value) {\n    this.showVacationDelete.next(value);\n  }\n  changeShowRegisterModal(value) {\n    this.showRegisterModal.next(value);\n  }\n  changeNameOfUser(value) {\n    this.nameOfUser.next(value);\n  }\n}\nStateService.ɵfac = function StateService_Factory(t) {\n  return new (t || StateService)();\n};\nStateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StateService,\n  factory: StateService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAOtC,OAAM,MAAOC,YAAY;EAiCvBC;IA/BQ,aAAQ,GAAG,IAAIF,eAAe,CAAU,KAAK,CAAC;IACtD,oBAAe,GAAG,IAAI,CAACG,QAAQ,CAACC,YAAY,EAAE;IAEtC,cAAS,GAAG,IAAIJ,eAAe,CAAU,KAAK,CAAC;IACvD,qBAAgB,GAAG,IAAI,CAACK,SAAS,CAACD,YAAY,EAAE;IAExC,mBAAc,GAAG,IAAIJ,eAAe,CAAU,IAAI,CAAC;IAC3D,0BAAqB,GAAG,IAAI,CAACM,cAAc,CAACF,YAAY,EAAE;IAElD,YAAO,GAAG,IAAIJ,eAAe,CAAU,KAAK,CAAC;IACrD,mBAAc,GAAG,IAAI,CAACO,OAAO,CAACH,YAAY,EAAE;IAEpC,yBAAoB,GAAG,IAAIJ,eAAe,CAAU,KAAK,CAAC;IAClE,gCAA2B,GAAG,IAAI,CAACQ,oBAAoB,CAACJ,YAAY,EAAE;IAE9D,uBAAkB,GAAG,IAAIJ,eAAe,CAAU,KAAK,CAAC;IAChE,8BAAyB,GAAG,IAAI,CAACS,kBAAkB,CAACL,YAAY,EAAE;IAE1D,uBAAkB,GAAG,IAAIJ,eAAe,CAAM,KAAK,CAAC;IAC5D,8BAAyB,GAAG,IAAI,CAACU,kBAAkB,CAACN,YAAY,EAAE;IAE1D,sBAAiB,GAAG,IAAIJ,eAAe,CAAM,KAAK,CAAC;IAC3D,6BAAwB,GAAG,IAAI,CAACW,iBAAiB,CAACP,YAAY,EAAE;IAExD,eAAU,GAAG,IAAIJ,eAAe,CAAS,OAAO,CAAC;IACzD,sBAAiB,GAAG,IAAI,CAACY,UAAU,CAACR,YAAY,EAAE;IAE1C,QAAG,GAAG,IAAI,CAACS,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IAC/B,QAAG,GAAG,oDAAoD;EAGlD;EAEhBC,cAAc,CAACC,KAAc;IAC3B,IAAI,CAACb,QAAQ,CAACc,IAAI,CAACD,KAAK,CAAC;EAC3B;EAEAE,eAAe,CAACF,KAAc;IAC5B,IAAI,CAACX,SAAS,CAACY,IAAI,CAACD,KAAK,CAAC;EAC5B;EAEAG,oBAAoB,CAACH,KAAc;IACjC,IAAI,CAACV,cAAc,CAACW,IAAI,CAACD,KAAK,CAAC;EACjC;EAEAI,aAAa,CAACJ,KAAc;IAC1B,IAAI,CAACT,OAAO,CAACU,IAAI,CAACD,KAAK,CAAC;EAC1B;EAEAK,0BAA0B,CAACL,KAAc;IACvC,IAAI,CAACR,oBAAoB,CAACS,IAAI,CAACD,KAAK,CAAC;EACvC;EAEAM,wBAAwB,CAACN,KAAc;IACrC,IAAI,CAACP,kBAAkB,CAACQ,IAAI,CAACD,KAAK,CAAC;EACrC;EAEAO,wBAAwB,CAACP,KAAc;IACrC,IAAI,CAACN,kBAAkB,CAACO,IAAI,CAACD,KAAK,CAAC;EACrC;EAEAQ,uBAAuB,CAACR,KAAU;IAChC,IAAI,CAACL,iBAAiB,CAACM,IAAI,CAACD,KAAK,CAAC;EACpC;EAEAS,gBAAgB,CAACT,KAAa;IAC5B,IAAI,CAACJ,UAAU,CAACK,IAAI,CAACD,KAAK,CAAC;EAC7B;;AArEWf,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAyB,SAAZzB,YAAY;EAAA0B,YAFX;AAAM","names":["BehaviorSubject","StateService","constructor","modeUser","asObservable","modeAdmin","showLoginModal","isLogin","showNewVacationModal","showVacationUpdate","showVacationDelete","showRegisterModal","nameOfUser","Cookies","get","changeModeUser","value","next","changeModeAdmin","changeShowLoginModal","changeIsLogin","changeShowNewVacationModal","changeShowVacationUpdate","changeShowVacationDelete","changeShowRegisterModal","changeNameOfUser","factory","providedIn"],"sourceRoot":"","sources":["D:\\workSpace\\angular\\myapp\\src\\app\\service\\shared.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport Cookies from 'js-cookie';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StateService {\r\n    \r\n  private modeUser = new BehaviorSubject<boolean>(false);\r\n  currentModeUser = this.modeUser.asObservable();\r\n\r\n  private modeAdmin = new BehaviorSubject<boolean>(false);\r\n  currentModeAdmin = this.modeAdmin.asObservable();\r\n\r\n  private showLoginModal = new BehaviorSubject<boolean>(true);\r\n  currentShowLoginModal = this.showLoginModal.asObservable();\r\n\r\n  private isLogin = new BehaviorSubject<boolean>(false);\r\n  currentIsLogin = this.isLogin.asObservable();\r\n\r\n  private showNewVacationModal = new BehaviorSubject<boolean>(false);\r\n  currentShowNewVacationModal = this.showNewVacationModal.asObservable();\r\n\r\n  private showVacationUpdate = new BehaviorSubject<boolean>(false);\r\n  currentShowVacationUpdate = this.showVacationUpdate.asObservable();\r\n\r\n  private showVacationDelete = new BehaviorSubject<any>(false);\r\n  currentShowVacationDelete = this.showVacationDelete.asObservable();\r\n\r\n  private showRegisterModal = new BehaviorSubject<any>(false);\r\n  currentShowRegisterModal = this.showRegisterModal.asObservable();\r\n\r\n  private nameOfUser = new BehaviorSubject<string>('Guest');\r\n  currentNameOfUser = this.nameOfUser.asObservable();\r\n\r\n  private jwt = this.Cookies.get('token');\r\n  private api = 'https://react-node-mysql-jwt.herokuapp.com/profile';\r\n    \r\n\r\n  constructor() { }\r\n\r\n  changeModeUser(value: boolean) {\r\n    this.modeUser.next(value);\r\n  }\r\n\r\n  changeModeAdmin(value: boolean) {\r\n    this.modeAdmin.next(value);\r\n  }\r\n\r\n  changeShowLoginModal(value: boolean) {\r\n    this.showLoginModal.next(value);\r\n  }\r\n\r\n  changeIsLogin(value: boolean) {\r\n    this.isLogin.next(value);\r\n  }\r\n\r\n  changeShowNewVacationModal(value: boolean) {\r\n    this.showNewVacationModal.next(value);\r\n  }\r\n\r\n  changeShowVacationUpdate(value: boolean) {\r\n    this.showVacationUpdate.next(value);\r\n  }\r\n\r\n  changeShowVacationDelete(value: boolean) {\r\n    this.showVacationDelete.next(value);\r\n  }\r\n\r\n  changeShowRegisterModal(value: any) {\r\n    this.showRegisterModal.next(value);\r\n  }\r\n\r\n  changeNameOfUser(value: string) {\r\n    this.nameOfUser.next(value);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}