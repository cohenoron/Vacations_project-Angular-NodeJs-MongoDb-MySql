{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nexport class StateService {\n  constructor(http, cookieService) {\n    this.http = http;\n    this.cookieService = cookieService;\n    this.modeUser = new BehaviorSubject(false);\n    this.currentModeUser = this.modeUser.asObservable();\n    this.modeAdmin = new BehaviorSubject(false);\n    this.currentModeAdmin = this.modeAdmin.asObservable();\n    this.showLoginModal = new BehaviorSubject(true);\n    this.currentShowLoginModal = this.showLoginModal.asObservable();\n    this.isLogin = new BehaviorSubject(false);\n    this.currentIsLogin = this.isLogin.asObservable();\n    this.showNewVacationModal = new BehaviorSubject(false);\n    this.currentShowNewVacationModal = this.showNewVacationModal.asObservable();\n    this.showVacationUpdate = new BehaviorSubject(false);\n    this.currentShowVacationUpdate = this.showVacationUpdate.asObservable();\n    this.showVacationDelete = new BehaviorSubject(false);\n    this.currentShowVacationDelete = this.showVacationDelete.asObservable();\n    this.showRegisterModal = new BehaviorSubject(false);\n    this.currentShowRegisterModal = this.showRegisterModal.asObservable();\n    this.nameOfUser = new BehaviorSubject('Guest');\n    this.currentNameOfUser = this.nameOfUser.asObservable();\n  }\n  changeModeUser(value) {\n    this.modeUser.next(value);\n  }\n  changeModeAdmin(value) {\n    this.modeAdmin.next(value);\n  }\n  changeShowLoginModal(value) {\n    this.showLoginModal.next(value);\n  }\n  changeIsLogin(value) {\n    this.isLogin.next(value);\n  }\n  changeShowNewVacationModal(value) {\n    this.showNewVacationModal.next(value);\n  }\n  changeShowVacationUpdate(value) {\n    this.showVacationUpdate.next(value);\n  }\n  changeShowVacationDelete(value) {\n    this.showVacationDelete.next(value);\n  }\n  changeShowRegisterModal(value) {\n    this.showRegisterModal.next(value);\n  }\n  changeNameOfUser(value) {\n    this.nameOfUser.next(value);\n  }\n  checkLogin() {\n    const jwt = this.cookieService.get('token');\n    if (jwt) {\n      this.changeIsLogin(true);\n      this.changeShowLoginModal(false);\n      axios.get('http://localhost:8080/profile', {\n        withCredentials: true,\n        headers: {\n          authorization: `Bearer ${jwt}`\n        }\n      }).then(response => {\n        const {\n          userName,\n          admin\n        } = response.data;\n        if (admin) {\n          this.changeModeAdmin(true);\n          this.changeModeUser(false);\n          this.changeNameOfUser(userName);\n        }\n        if (!admin) {\n          this.changeModeUser(true);\n          this.changeModeAdmin(false);\n          this.changeNameOfUser(userName);\n        }\n      }).catch(function (error) {\n        alert(error.message);\n      });\n    }\n  }\n  if(currentModeUser) {\n    const tkn = this.cookieService.get('token');\n    axios.get('http://localhost:8080/fav', {\n      withCredentials: true,\n      headers: {\n        authorization: `Bearer ${tkn}`\n      }\n    }).then(function (response) {\n      console.log(response.data);\n      // const result = response.data.map(({ vacation_id }) => vacation_id)\n      // setChecked(result)\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n}\nStateService.ɵfac = function StateService_Factory(t) {\n  return new (t || StateService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n};\nStateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StateService,\n  factory: StateService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["BehaviorSubject","axios","StateService","constructor","http","cookieService","modeUser","asObservable","modeAdmin","showLoginModal","isLogin","showNewVacationModal","showVacationUpdate","showVacationDelete","showRegisterModal","nameOfUser","changeModeUser","value","next","changeModeAdmin","changeShowLoginModal","changeIsLogin","changeShowNewVacationModal","changeShowVacationUpdate","changeShowVacationDelete","changeShowRegisterModal","changeNameOfUser","checkLogin","jwt","get","withCredentials","headers","authorization","then","response","userName","admin","data","catch","error","alert","message","if","currentModeUser","tkn","console","log","factory","providedIn"],"sourceRoot":"","sources":["D:\\workSpace\\angular\\myapp\\src\\app\\service\\shared.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StateService {\r\n  private modeUser = new BehaviorSubject<boolean>(false);\r\n  currentModeUser = this.modeUser.asObservable();\r\n\r\n  private modeAdmin = new BehaviorSubject<boolean>(false);\r\n  currentModeAdmin = this.modeAdmin.asObservable();\r\n\r\n  private showLoginModal = new BehaviorSubject<boolean>(true);\r\n  currentShowLoginModal = this.showLoginModal.asObservable();\r\n\r\n  private isLogin = new BehaviorSubject<boolean>(false);\r\n  currentIsLogin = this.isLogin.asObservable();\r\n\r\n  private showNewVacationModal = new BehaviorSubject<boolean>(false);\r\n  currentShowNewVacationModal = this.showNewVacationModal.asObservable();\r\n\r\n  private showVacationUpdate = new BehaviorSubject<boolean>(false);\r\n  currentShowVacationUpdate = this.showVacationUpdate.asObservable();\r\n\r\n  private showVacationDelete = new BehaviorSubject<any>(false);\r\n  currentShowVacationDelete = this.showVacationDelete.asObservable();\r\n\r\n  private showRegisterModal = new BehaviorSubject<any>(false);\r\n  currentShowRegisterModal = this.showRegisterModal.asObservable();\r\n\r\n  private nameOfUser = new BehaviorSubject<string>('Guest');\r\n  currentNameOfUser = this.nameOfUser.asObservable();\r\n\r\n  constructor(private http: HttpClient, private cookieService: CookieService) {}\r\n\r\n  changeModeUser(value: boolean) {\r\n    this.modeUser.next(value);\r\n  }\r\n\r\n  changeModeAdmin(value: boolean) {\r\n    this.modeAdmin.next(value);\r\n  }\r\n\r\n  changeShowLoginModal(value: boolean) {\r\n    this.showLoginModal.next(value);\r\n  }\r\n\r\n  changeIsLogin(value: boolean) {\r\n    this.isLogin.next(value);\r\n  }\r\n\r\n  changeShowNewVacationModal(value: boolean) {\r\n    this.showNewVacationModal.next(value);\r\n  }\r\n\r\n  changeShowVacationUpdate(value: boolean) {\r\n    this.showVacationUpdate.next(value);\r\n  }\r\n\r\n  changeShowVacationDelete(value: boolean) {\r\n    this.showVacationDelete.next(value);\r\n  }\r\n\r\n  changeShowRegisterModal(value: any) {\r\n    this.showRegisterModal.next(value);\r\n  }\r\n\r\n  changeNameOfUser(value: string) {\r\n    this.nameOfUser.next(value);\r\n  }\r\n\r\n  checkLogin() {\r\n    const jwt = this.cookieService.get('token');\r\n    if (jwt) {\r\n      this.changeIsLogin(true);\r\n      this.changeShowLoginModal(false);\r\n\r\n      axios\r\n        .get('http://localhost:8080/profile', {\r\n          withCredentials: true,\r\n          headers: { authorization: `Bearer ${jwt}` },\r\n        })\r\n        .then((response) => {\r\n          const { userName, admin } = response.data;\r\n          if (admin) {\r\n            this.changeModeAdmin(true);\r\n            this.changeModeUser(false);\r\n            this.changeNameOfUser(userName);\r\n          }\r\n          if (!admin) {\r\n            this.changeModeUser(true);\r\n            this.changeModeAdmin(false);\r\n            this.changeNameOfUser(userName);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          alert(error.message);\r\n        });\r\n    }\r\n  }\r\n  if (currentModeUser) {\r\n    const tkn = this.cookieService.get('token');\r\n    axios\r\n      .get('http://localhost:8080/fav', {\r\n        withCredentials: true,\r\n        headers: { authorization: `Bearer ${tkn}` },\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n        // const result = response.data.map(({ vacation_id }) => vacation_id)\r\n        // setChecked(result)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}